services:
  server:
    build: .
    entrypoint: ["server"]
    env_file:
      - example.env
    environment:
      - OUTBOX_KAFKA_BROKERS=kafka:9092
      - OUTBOX_POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/postgres
      - OUTBOX_SERVER_HOST=0.0.0.0
      - OUTBOX_SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      postgres-up:
        condition: service_completed_successfully
      kafka-up:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 3s
      timeout: 30s
      retries: 10
  postgres-up:
    build: .
    entrypoint: ["postgres-up"]
    env_file:
      - example.env
    environment:
      - OUTBOX_POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
  kafka-up:
    build: .
    entrypoint: ["kafka-up"]
    env_file:
      - example.env
    environment:
      - OUTBOX_KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
  postgres:
    image: postgres:16.3-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 3s
      timeout: 30s
      retries: 10
  kafka:
    image: bitnami/kafka:3.7.1
    environment:
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
    ports:
      # Expose container's port 9094 to host's port 9094 specified in KAFKA_CFG_LISTENERS with "EXTERNAL://:9094" and
      # KAFKA_CFG_ADVERTISED_LISTENERS with "EXTERNAL://localhost:9094" respectively. External clients can connect to
      # Kafka using localhost:9094. To remove external access, remove the port mapping and EXTERNAL listeners from
      # KAFKA_CFG_ADVERTISED_LISTENERS, KAFKA_CFG_LISTENERS and KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP.
      - "9094:9094"
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      # Might not work in cluster mode (see https://github.com/bitnami/containers/issues/50306).
      test: ["CMD-SHELL", "kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1"]
      interval: 3s
      timeout: 30s
      retries: 10
volumes:
  postgres-data:
  kafka-data:
